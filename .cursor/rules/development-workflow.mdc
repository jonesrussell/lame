---
description: Development workflow and environment setup
---

# Development Workflow

## Environment Setup

- PHP 8.2+ required (CI uses 8.4)
- Node.js 22 required
- Use SQLite for local development (configured in composer.json)
- Copy `.env.example` to `.env` for environment variables

## Development Commands

### Full Development Environment
```bash
composer run dev
```
This runs:
- Laravel development server (`php artisan serve`)
- Queue worker (`php artisan queue:listen`)
- Log monitoring (`php artisan pail`)
- Vite dev server with hot reloading (`npm run dev`)

### Individual Services
```bash
# Laravel server only
php artisan serve

# Vite dev server only
npm run dev

# Queue worker only
php artisan queue:listen

# Log monitoring only
php artisan pail
```

### Code Quality
```bash
# Format PHP code
./vendor/bin/pint

# Format frontend code
npm run format

# Lint frontend code
npm run lint

# Run tests
composer run test
```

## Hot Reloading

- Frontend changes are automatically reloaded via Vite
- Backend changes require manual refresh
- Use `composer run dev` for the best development experience

## Database

- SQLite database is automatically created (`database/database.sqlite`)
- Run migrations: `php artisan migrate`
- Use factories for test data: `User::factory()->create()`

## Git Workflow

- Use `main` branch for production
- Use `develop` branch for development
- Create feature branches from `develop`
- Tests run automatically on push/PR to `main` and `develop`